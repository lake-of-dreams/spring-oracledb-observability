admin:
  existingSecret: "grafana-admin-secret"
  userKey: user
  passwordKey: password
datasources: 
 datasources.yaml:
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      uid: prometheus
      url: http://spring-oracledb-observability-prometheus-server:80
      editable: true
      jsonData:
        httpMethod: POST
        exemplarTraceIdDestinations:
          - name: trace_id
            datasourceUid: jaeger
    - name: Jaeger
      type: jaeger
      uid: jaeger
      access: proxy
      url: http://spring-oracledb-observability-jaeger-query:80
      editable: true
      jsonData:
        httpMethod: GET
        tracesToMetrics:
          datasourceUid: prometheus
          tags: [{ key: 'service.name', value: 'application' }, { key: 'method' }, { key: 'uri' }, { key: 'outcome' }, { key: 'status' }, { key: 'exception' }]
          queries:
            - name: 'Throughput'
              query: 'sum(rate(http_server_requests_seconds_count{$$__tags}[$$__rate_interval]))'
            - name: 'Latency'
              query: 'histogram_quantile(1.00, sum(rate(http_server_requests_seconds_bucket{$$__tags}[$$__rate_interval])) by (le))'
          spanStartTimeShift: '-10m'
          spanEndTimeShift: '10m'
        tracesToLogsV2:
          customQuery: true
          datasourceUid: loki
          filterByTraceID: true
          filterBySpanID: false
          query: '{app="$${__span.tags.app}"} |= "$${__trace.traceId}"'
          spanStartTimeShift: '-10m'
          spanEndTimeShift: '10m'
          tags: [{ key: 'service.name', value: 'app' }]
        lokiSearch:
          datasourceUid: loki
        serviceMap:
          datasourceUid: prometheus
        nodeGraph:
          enabled: true
    - access: proxy
      name: Loki
      type: loki
      uid: loki
      url: http://spring-oracledb-observability-loki-gateway:80
      editable: true
      jsonData:
        maxLines: 50
        derivedFields:
          - datasourceUid: jaeger
            matcherRegex: '.+ --- \[.+\] \[.+\] \[(\w*)-\w*\] .+'
            name: traceId
            url: $${__value.raw}